{"version":3,"file":"static/js/485.6eddfa82.chunk.js","mappings":"uMACA,EAA8B,iCAA9B,EAA6E,iCAA7E,EAAiI,sCCAjI,EAAgC,uC,SCahC,EAVwB,SAAHA,GAAA,IAAMC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAM,OAC/BC,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAqBC,SAAA,CAAC,KAC7BL,EAAK,KAAGC,IACX,E,oBCPCK,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE5CC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAO,EAEzCC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAU,ECEpDC,EAAc,WACzB,IAAMH,GAASI,EAAAA,EAAAA,IAAYL,GACrBF,GAAWO,EAAAA,EAAAA,IAAYT,GACvBU,GAAWC,EAAAA,EAAAA,MACXC,EAAmBV,EAASG,QAAO,SAAAQ,GAAO,OAC9CA,EAAQnB,KAAKoB,cAAcC,SAASV,EAAOS,cAAc,IAG3D,OACEE,EAAAA,EAAAA,KAAA,MAAInB,UAAWC,EAAmBC,SAC/Ba,EAAiBK,KAAI,SAAAxB,GAAA,IAAGyB,EAAEzB,EAAFyB,GAAIxB,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAM,OACvCC,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAmBC,SAAA,EACzCiB,EAAAA,EAAAA,KAACG,EAAe,CAACD,GAAIA,EAAIxB,KAAMA,EAAMC,OAAQA,KAC7CqB,EAAAA,EAAAA,KAAA,UACEI,KAAK,SACLvB,UAAWC,EACXuB,QAAS,kBAAMX,GAASY,EAAAA,EAAAA,IAAeJ,GAAI,EAACnB,SAC7C,aANMmB,EASJ,KAIb,E,UCvBaK,EAAgB,WAC3B,IAAMb,GAAWC,EAAAA,EAAAA,MACXJ,GAAYE,EAAAA,EAAAA,IAAYH,GAM9B,OAJAkB,EAAAA,EAAAA,YAAU,WACRd,GAASV,EAAAA,EAAAA,MACX,GAAG,CAACU,KAGFd,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAA1B,SAAA,EACEiB,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAAA3B,UACLiB,EAAAA,EAAAA,KAAA,SAAAjB,SAAO,oBAETiB,EAAAA,EAAAA,KAAA,OAAAjB,SAAMQ,GAAa,6BACnBS,EAAAA,EAAAA,KAACR,EAAW,MAGlB,C","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","pages/ContactsPages.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__+MpkC\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactPerson\":\"ContactListItem_contactPerson__g-MQ7\"};","import React from \"react\";\nimport styles from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ name, number}) => (\n        <p className={styles.contactPerson}>\n            ~ {name}: {number}\n        </p>\n    );\n\nContactListItem.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n};\nexport default ContactListItem;","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../redux/operations';\nimport { getContacts, getFilter } from '../../redux/selectors';\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={styles.contactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactItem}>\n          <ContactListItem id={id} name={name} number={number} />\n          <button\n            type=\"button\"\n            className={styles.contactDeleteBtn}\n            onClick={() => dispatch(deleteContacts(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/operations';\nimport { selectIsLoading } from '../redux/selectors';\n\nexport const ContactsPages = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contact</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress ...'}</div>\n      <ContactList />\n    </>\n  );\n};\n"],"names":["_ref","name","number","_jsxs","className","styles","children","getContacts","state","contacts","items","getFilter","filter","selectIsLoading","isLoading","ContactList","useSelector","dispatch","useDispatch","filteredContacts","contact","toLowerCase","includes","_jsx","map","id","ContactListItem","type","onClick","deleteContacts","ContactsPages","useEffect","_Fragment","Helmet"],"sourceRoot":""}